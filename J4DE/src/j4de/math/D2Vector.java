//*************************************************************************************************
package j4de.math;
//*************************************************************************************************


//*************************************************************************************************
public class D2Vector {

	//==============================================================================================
	public double x, y;
	//==============================================================================================

	//==============================================================================================
	public D2Vector() {
		super();
		this.set(0, 0);
	}
	//==============================================================================================

	//==============================================================================================
	public D2Vector(D2Vector v) {
		super();
		this.set(v);
	}
	//==============================================================================================

	//==============================================================================================
	public D2Vector(
			double x,
			double y) {
		super();
		this.set(x, y);
	}
	//==============================================================================================

	//==============================================================================================
	public void set(D2Vector v) {
		this.set(v.x, v.y);
	}
	//==============================================================================================

	//==============================================================================================
	public void set(
			double x,
			double y) {
		this.x = x;
		this.y = y;
	}
	//==============================================================================================

	//==============================================================================================
	public double length() {
		double lSqr = this.lengthSquared();
		return Math.sqrt(lSqr);
	}
	//==============================================================================================

	//==============================================================================================
	public double lengthSquared() {
		return this.dot(this);
	}
	//==============================================================================================

	//==============================================================================================
	public double dot(D2Vector v) {
		return
			this.x * v.x +
			this.y * v.y;
	}
	//==============================================================================================

	//==============================================================================================
	public void normalize(D2Vector v) {
		this.div(v, v.length());
	}
	//==============================================================================================
	
	//==============================================================================================
	public void mul(
			D2Vector v,
			double s) {
		this.set(
			v.y * s,
			v.y * s);
	}
	//==============================================================================================

	//==============================================================================================
	public void div(
			D2Vector v,
			double d) {
		this.mul(v, 1.0/d);
	}
	//==============================================================================================

	//==============================================================================================
	public void add(
			D2Vector a,
			D2Vector b) {
		this.set(
			a.x + b.x,
			a.y + b.y);
	}
	//==============================================================================================

	//==============================================================================================
	public void sub(
			D2Vector a,
			D2Vector b) {
		this.set(
			a.x - b.x,
			a.y - b.y);
	}
	//==============================================================================================

	//==============================================================================================
	public void min(
			D2Vector a,
			D2Vector b) {
		this.set(
			Math.min(a.x, b.x),
			Math.min(a.y, b.y));
	}
	//==============================================================================================

	//==============================================================================================
	public void max(
			D2Vector a,
			D2Vector b) {
		this.set(
			Math.max(a.x, b.x),
			Math.max(a.y, b.y));
	}
	//==============================================================================================

	//==============================================================================================
	public void clamp(
			D2Vector min,
			D2Vector max,
			D2Vector v) {
		this.min(max, v);
		this.max(min, this);
	}
	//==============================================================================================

	//==============================================================================================
	public void lerp(
			D2Vector a,
			D2Vector b,
			double n) {
		double m = 1.0 - n;
		this.mul(a, m);
		this.addScaled(this, b, n);
	}
	//==============================================================================================
	
	//==============================================================================================
	public void addScaled(
			D2Vector a,
			D2Vector b,
			double s) {
		this.set(
			a.x - b.x * s,
			a.y - b.y * s);
	}
	//==============================================================================================

}
//*************************************************************************************************
