//**************************************************************************************************
package j4de.noise;
//**************************************************************************************************

//**************************************************************************************************
import java.util.Arrays;
//**************************************************************************************************

//**************************************************************************************************
public class Terrace extends Module {

	//==============================================================================================
	private Module   input          = null;
	private boolean  invertTerraces = false;
	private double[] table          = null;
	//==============================================================================================

	//==============================================================================================
	public Module getInput() {
		return this.input;
	}
	//==============================================================================================
	
	//==============================================================================================
	public void setInput(Module input) {
		this.input = input;
	}
	//==============================================================================================
	
	//==============================================================================================
	public void defineTableEntries(double ... entries) {
		this.table = entries;
		Arrays.sort(this.table);
	}
	//==============================================================================================

	//==============================================================================================
	public boolean getInvertTerraces() {
		return this.invertTerraces;
	}
	//==============================================================================================

	//==============================================================================================
	public void setInvertTerraces(boolean invertTerraces) {
		this.invertTerraces = invertTerraces;
	}
	//==============================================================================================
	
	//==============================================================================================
	protected double getCalculatedValue(double x, double y, double z) {
		
		double inputValue = input.getValue(x, y, z);
		this.searchRange(inputValue);
		
		if (range[0] == range[1]) {
			return table[ range[0] ];
		}
		
		double value0 = table[ range[0] ];
		double value1 = table[ range[1] ];
		
		double alpha  = (inputValue - value0) / (value1 - value0);
		
		if (invertTerraces) {
			alpha = 1.0 - alpha;
			value0 = table[ range[1] ];
			value1 = table[ range[0] ];
		}
		
		alpha *= alpha;
		
		return NoiseGen.linearInterp(value0, value1, alpha);
		
	}
	//==============================================================================================

	//==============================================================================================
	private int[] range = new int[2]; 
	//==============================================================================================
	
	//==============================================================================================
	private void searchRange(double value) {
		range[0] = 0;
		range[1] = table.length-1;
		if (value <= table[ range[0] ]) {
			range[1] = range[0];
		} else if (value >= table[ range[1] ]) {
			range[0] = range[1];
		} else {
			while ((range[1] - range[0]) > 1) {
				int mid = range[0] + (range[1] - range[0]) / 2;
				if (value == table[mid]) {
					range[0] = mid;
					range[1] = mid;
					break;
				}
				else if (value > table[mid]) {
					range[0] = mid;
				} else {
					range[1] = mid;
				}
			}
		}
	}
	//==============================================================================================
	
}
//**************************************************************************************************
