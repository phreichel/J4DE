//*************************************************************************************************
package j4de.proto;
//*************************************************************************************************

//*************************************************************************************************
import java.util.Queue;
import java.util.LinkedList;
//*************************************************************************************************

//*************************************************************************************************
public class PQueue {

	//==============================================================================================
	private Queue<PMessage> queue = null;
	//==============================================================================================
	
	//==============================================================================================
	public PQueue() {
		super();
		this.queue = new LinkedList<PMessage>();
	}
	//==============================================================================================

	//==============================================================================================
	public void post(PMessage msg) {
		queue.offer(msg);
	}
 	//==============================================================================================

 	//==============================================================================================
	public void init() {
		while (!this.queue.isEmpty()) {
			PMessage msg = this.queue.poll();
			this.dispatch(msg);
		}
	}
 	//==============================================================================================

 	//==============================================================================================
	public void step() {
		while (!this.queue.isEmpty()) {
			PMessage msg = this.queue.poll();
			this.dispatch(msg);
		}
	}
 	//==============================================================================================

 	//==============================================================================================
	public void done() {
		while (!this.queue.isEmpty()) {
			PMessage msg = this.queue.poll();
			this.dispatch(msg);
		}
	}
 	//==============================================================================================

 	//==============================================================================================
	private void dispatch(PMessage msg) {
		
	}
 	//==============================================================================================
	
}
//*************************************************************************************************
