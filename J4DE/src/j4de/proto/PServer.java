//*************************************************************************************************
package j4de.proto;
//*************************************************************************************************

//*************************************************************************************************
public class PServer extends Thread {

	//==============================================================================================
	private boolean terminated = false;
	private PClock  clock      = null;
	private PQueue  queue      = null;
	private PWorld  world      = null;
	//==============================================================================================
	
	//==============================================================================================
	public PServer() {
		super();
		this.clock = new PClock();
		this.queue = new PQueue();
		this.world = new PWorld();
	}
	//==============================================================================================

	//==============================================================================================
	public void begin() {
		super.start();
	}
	//==============================================================================================

	//==============================================================================================
	public void end() {
		this.terminated = true;
	}
	//==============================================================================================
	
	//==============================================================================================
	private void init() {
		System.out.println("SERVER: INIT");
		this.clock.init();
		this.queue.init();
		this.world.init();
	}
	//==============================================================================================

	//==============================================================================================
	private void step() {
		System.out.println("SERVER: STEP");
		this.clock.step();
		this.queue.step();
		this.world.step();
	}
	//==============================================================================================
	
	//==============================================================================================
	private void done() {
		System.out.println("SERVER: DONE");
		this.clock.done();
		this.world.done();
	}
	//==============================================================================================
	
	//==============================================================================================
	public void run() {
		init();
		while (!terminated) {
			step();
		}
		done();
	}
	//==============================================================================================
	
}
//*************************************************************************************************
